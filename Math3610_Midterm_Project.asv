% SIR Model
close all
clc
clear

% Define the system of ODEs in a separate file named myThreeODE.m
function dydt = ODE_equations(t, y)
    S_1 = y(1);
    S_2 = y(2);
    S_3 = y(3);
    S_4 = y(4);
    I_1 = y(5);
    I_2 = y(6);
    I_3 = y(7);
    I_4 = y(8);
    R_1 = y(9);
    R_2 = y(10);
    R_3 = y(11);
    R_4 = y(12);
    D_1 = y(13);
    D_2 = y(14);
    D_3 = y(15);
    D_4 = y(16);
    beta_1 = 2.5e-6; % infection likelihood 2.8e-4*2.5
    beta_2 = 5e-6; %1.87e-5*2.5
    beta_3 = 3e-6; %9.35e-6*2.5
    beta_4 = 5e-7; % 4.67e-6*2.5
    gamma_1 = 0.999/5; % recovery rate from Omega
    gamma_2 = 0.997/5;
    gamma_3 = 0.994/5;
    gamma_4 = 0.886/5;
    nat_death_1 = 0; %0.0015/365; % natural death rate
    nat_death_2 = 0; %0.0016/365;
    nat_death_3 = 0; %0.0076/365;
    nat_death_4 = 0;%0.0755/365;
    I = I_1 + I_2 + I_3 + I_4;
    V = 100;
    V_1 = 0;
    V_2 = 0;
    V_3 = 0;
    V_4 = 0;
    if S_4 > V
        V_4 = V;
    elseif S_3 > V
        V_3 = V;
    elseif S_2 > V
        V_2 = V;
    elseif S_1 > V
        V_1 = V;
    end
    dydt = [-1*beta_1*S_1 *(I)-1*nat_death_1*(S_1)-V_1;
        -1*beta_2*S_2 *(I)-1*nat_death_2*(S_2)-V_2;
        -1*beta_3*S_3 *(I)-1*nat_death_3*(S_3)-V_3;
        -1*beta_4*S_4 *(I)-1*nat_death_4*(S_4)-V_4;
        beta_1*I*S_1 - gamma_1*I_1 - nat_death_1*I_1; 
        beta_2*I*S_2 - gamma_2*I_2 - nat_death_2*I_2;
        beta_3*I*S_3 - gamma_3*I_3 - nat_death_3*I_3;
        beta_4*I*S_4 - gamma_4*I_4 - nat_death_4*I_4;
        gamma_1*I_1 - nat_death_1*R_1+V_1;
        gamma_2*I_2 - nat_death_2*R_2+V_2;
        gamma_3*I_3 - nat_death_3*R_3+V_3;
        gamma_4*I_4 - nat_death_4*R_4+V_4;
        nat_death_1*(S_1+I_1+R_1)+((1-gamma_1*5)/5)*I_1;
        nat_death_2*(S_2+I_2+R_2)+((1-gamma_2*5)/5)*I_2;
        nat_death_3*(S_3+I_3+R_3)+((1-gamma_3*5)/5)*I_3;
        nat_death_4*(S_4+I_4+R_4)+((1-gamma_4*5)/5)*I_4];
end

% Main script
tspan = [0 300];     % Time span
N = 107000;
y0 = [N*0.2; N*0.35; N*0.3; N*0.15; 25; 25; 25; 25; 0; 0; 0; 0; 0; 0; 0; 0];     % Initial conditions

% Solve the system of ODEs
[t, y] = ode23(@ODE_equations, tspan, y0);

% Plot the results
figure;
hold on;
plot(t, y(:, 1), 'b','Linewidth',2, 'DisplayName', 'S_1 (Susceptible 1)');
plot(t, y(:, 2), 'g', 'Linewidth', 2, 'DisplayName', 'S_2 (Susceptible 2)');
plot(t, y(:, 3), 'r', 'Linewidth', 2, 'DisplayName', 'S_3 (Susceptible 3)');
plot(t, y(:, 4), 'c', 'Linewidth', 2, 'DisplayName', 'S_4 (Susceptible 4)');
plot(t, y(:, 5), 'b--', 'Linewidth', 2, 'DisplayName', 'I_1 (Infected 1)');
plot(t, y(:, 6), 'g--', 'Linewidth', 2, 'DisplayName', 'I_2 (Infected 2)');
plot(t, y(:, 7), 'r--', 'Linewidth', 2, 'DisplayName', 'I_3 (Infected 3)');
plot(t, y(:, 8), 'c--', 'Linewidth', 2, 'DisplayName', 'I_4 (Infected 4)');
plot(t, y(:, 9), 'b:', 'Linewidth', 2, 'DisplayName', 'R_1 (Recovered 1)');
plot(t, y(:, 10), 'g:', 'Linewidth', 2, 'DisplayName', 'R_2 (Recovered 2)');
plot(t, y(:, 11), 'r:', 'Linewidth', 2, 'DisplayName', 'R_3 (Recovered 3)');
plot(t, y(:, 12), 'c:', 'Linewidth', 2, 'DisplayName', 'R_4 (Recovered 4)');
plot(t, y(:, 13), 'b-.', 'Linewidth', 2, 'DisplayName', 'D_1 (Dead 1)');
plot(t, y(:, 14), 'g-.', 'Linewidth', 2, 'DisplayName', 'D_2 (Dead 2)');
plot(t, y(:, 15), 'r-.', 'Linewidth', 2, 'DisplayName', 'D_3 (Dead 3)');
plot(t, y(:, 16), 'c-.', 'Linewidth', 2, 'DisplayName', 'D_4 (Dead 4)');
hold off;

y(:, 16)

xlabel('Time');
ylabel('Population');
title('SIR Model Dynamics');
legend show;
grid on;

